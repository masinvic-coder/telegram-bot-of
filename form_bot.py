import os
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import (ApplicationBuilder, CommandHandler, MessageHandler,
                          ConversationHandler, ContextTypes, filters)

# States
(NAME, AGE, LOCATION, INSTAGRAM, OF_ACCOUNT, FACE_OK, CONTACT_METHOD, CONTACT_INFO, EXTRA) = range(9)

# Keyboard options
of_account_keyboard = [['–î–∞', '–ù–µ—Ç', '–ü–æ–∫–∞ –Ω–µ—Ç, –Ω–æ –≥–æ—Ç–æ–≤–∞ –Ω–∞—á–∞—Ç—å']]
face_keyboard = [['–î–∞', '–ù–µ—Ç', '–ó–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç–∞']]
contact_keyboard = [['Email', 'Telegram', 'Instagram', 'WhatsApp']]

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("1. –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
    return NAME

async def name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['name'] = update.message.text
    await update.message.reply_text("2. –°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?")
    return AGE

async def age(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['age'] = update.message.text
    await update.message.reply_text("3. –ì–¥–µ —Ç—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è?")
    return LOCATION

async def location(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['location'] = update.message.text
    await update.message.reply_text("4. –°—Å—ã–ª–æ—á–∫–∞ –Ω–∞ Instagram")
    return INSTAGRAM

async def instagram(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['instagram'] = update.message.text
    await update.message.reply_text(
        "5. –£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç OnlyFans?",
        reply_markup=ReplyKeyboardMarkup(of_account_keyboard, one_time_keyboard=True, resize_keyboard=True)
    )
    return OF_ACCOUNT

async def of_account(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['of_account'] = update.message.text
    await update.message.reply_text(
        "6. –ì–æ—Ç–æ–≤–∞ –ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏—Ü–æ –≤ –∫–æ–Ω—Ç–µ–Ω—Ç–µ?",
        reply_markup=ReplyKeyboardMarkup(face_keyboard, one_time_keyboard=True, resize_keyboard=True)
    )
    return FACE_OK

async def face_ok(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['face_ok'] = update.message.text
    await update.message.reply_text(
        "7. –£–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏",
        reply_markup=ReplyKeyboardMarkup(contact_keyboard, one_time_keyboard=True, resize_keyboard=True)
    )
    return CONTACT_METHOD

async def contact_method(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['contact_method'] = update.message.text
    await update.message.reply_text("8. –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", reply_markup=ReplyKeyboardRemove())
    return CONTACT_INFO

async def contact_info(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['contact_info'] = update.message.text
    await update.message.reply_text("9. –ß—Ç–æ –µ—â–µ —Ö–æ—á–µ—à—å —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —Å–µ–±–µ (–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)")
    return EXTRA

async def extra(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['extra'] = update.message.text

    data = context.user_data
    summary = (
        f"üì• –ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞:\n"
        f"–ò–º—è: {data['name']}\n"
        f"–í–æ–∑—Ä–∞—Å—Ç: {data['age']}\n"
        f"–õ–æ–∫–∞—Ü–∏—è: {data['location']}\n"
        f"Instagram: {data['instagram']}\n"
        f"OnlyFans: {data['of_account']}\n"
        f"–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ª–∏—Ü–æ: {data['face_ok']}\n"
        f"–°–≤—è–∑—å: {data['contact_method']} ‚Äî {data['contact_info']}\n"
        f"–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: {data['extra']}"
    )

    CHANNEL_ID = "-1002722852436"
    await context.bot.send_message(chat_id=os.getenv("ADMIN_CHAT_ID"), text=summary)

    await update.message.reply_text("‚úÖ –°–ø–∞—Å–∏–±–æ! –ê–Ω–∫–µ—Ç—É –ø–æ–ª—É—á–∏–ª–∏, —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å —Ç–æ–±–æ–π")
    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–û–∫–µ–π, –æ—Ç–º–µ–Ω–µ–Ω–æ.", reply_markup=ReplyKeyboardRemove())
    return ConversationHandler.END

if __name__ == '__main__':
    import asyncio

    BOT_TOKEN = os.getenv("BOT_TOKEN")

    app = ApplicationBuilder().token(BOT_TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, name)],
            AGE: [MessageHandler(filters.TEXT & ~filters.COMMAND, age)],
            LOCATION: [MessageHandler(filters.TEXT & ~filters.COMMAND, location)],
            INSTAGRAM: [MessageHandler(filters.TEXT & ~filters.COMMAND, instagram)],
            OF_ACCOUNT: [MessageHandler(filters.TEXT & ~filters.COMMAND, of_account)],
            FACE_OK: [MessageHandler(filters.TEXT & ~filters.COMMAND, face_ok)],
            CONTACT_METHOD: [MessageHandler(filters.TEXT & ~filters.COMMAND, contact_method)],
            CONTACT_INFO: [MessageHandler(filters.TEXT & ~filters.COMMAND, contact_info)],
            EXTRA: [MessageHandler(filters.TEXT & ~filters.COMMAND, extra)],
        },
        fallbacks=[CommandHandler('cancel', cancel)],
    )

    app.add_handler(conv_handler)
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()
